/*
Copyright The KubeDB Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = 'proto2';

package kubedb.dev.apimachinery.apis.dba.v1alpha1;

import "k8s.io/api/core/v1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";
import "kmodules.xyz/client-go/api/v1/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1alpha1";

// Resources requested by a single application container
message ContainerResources {
  // Name of the container specified as a DNS_LABEL.
  // Each container in a pod must have a unique name (DNS_LABEL).
  // Cannot be updated.
  optional string name = 1;

  // Compute Resources required by this container.
  // Cannot be updated.
  // More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  // +optional
  optional k8s.io.api.core.v1.ResourceRequirements resources = 2;
}

// ElasticsearchScaleSpec contains the scaling information of the Elasticsearch
message ElasticsearchHorizontalScaleSpec {
  // Number of master nodes
  optional int32 master = 1;

  // Number of data nodes
  optional int32 data = 2;

  // Number of client nodes
  optional int32 client = 3;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=elasticsearchmodificationrequests,singular=elasticsearchmodificationrequest,shortName=esmodreq,categories={datastore,kubedb,appscode}
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Type",type="string",JSONPath=".spec.type"
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
message ElasticsearchModificationRequest {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ElasticsearchModificationRequestSpec spec = 2;

  optional ElasticsearchModificationRequestStatus status = 3;
}

// ElasticsearchModificationRequestList is a list of ElasticsearchModificationRequests
message ElasticsearchModificationRequestList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ElasticsearchModificationRequest CRD objects
  repeated ElasticsearchModificationRequest items = 2;
}

// ElasticsearchModificationRequestSpec is the spec for ElasticsearchModificationRequest
message ElasticsearchModificationRequestSpec {
  // Specifies the Elasticsearch reference
  optional k8s.io.api.core.v1.LocalObjectReference databaseRef = 1;

  // Specifies the modification request type: Upgrade, HorizontalScaling, VerticalScaling etc.
  optional string type = 2;

  // Specifies the field information that needed to be upgraded
  optional UpgradeSpec upgrade = 3;

  // HorizontalScaling specifies the horizontal scaling.
  optional ElasticsearchHorizontalScaleSpec horizontalScaling = 4;
}

// ElasticsearchModificationRequestStatus is the status for ElasticsearchModificationRequest
message ElasticsearchModificationRequestStatus {
  // Specifies the current phase of the modification request
  // +optional
  optional string phase = 1;

  // observedGeneration is the most recent generation observed for this resource. It corresponds to the
  // resource's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 2;

  // Conditions applied to the request, such as approval or denial.
  // +optional
  repeated kmodules.xyz.client_go.api.v1.Condition conditions = 3;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=etcdmodificationrequests,singular=etcdmodificationrequest,shortName=etcdmodreq,categories={datastore,kubedb,appscode}
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Type",type="string",JSONPath=".spec.type"
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
message EtcdModificationRequest {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional EtcdModificationRequestSpec spec = 2;

  optional EtcdModificationRequestStatus status = 3;
}

// EtcdModificationRequestList is a list of EtcdModificationRequests
message EtcdModificationRequestList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of EtcdModificationRequest CRD objects
  repeated EtcdModificationRequest items = 2;
}

// EtcdModificationRequestSpec is the spec for EtcdModificationRequest
message EtcdModificationRequestSpec {
  // Specifies the etcd reference
  optional k8s.io.api.core.v1.LocalObjectReference databaseRef = 1;

  // Specifies the modification request type: Upgrade, HorizontalScaling, VerticalScaling etc.
  optional string type = 2;

  // Specifies the field information that needed to be upgraded
  optional UpgradeSpec upgrade = 3;
}

// EtcdModificationRequestStatus is the status for EtcdModificationRequest
message EtcdModificationRequestStatus {
  optional string phase = 1;

  // observedGeneration is the most recent generation observed for this resource. It corresponds to the
  // resource's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 2;

  // Conditions applied to the request, such as approval or denial.
  // +optional
  repeated kmodules.xyz.client_go.api.v1.Condition conditions = 3;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=memcachedmodificationrequests,singular=memcachedmodificationrequest,shortName=mcmodreq,categories={datastore,kubedb,appscode}
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Type",type="string",JSONPath=".spec.type"
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
message MemcachedModificationRequest {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MemcachedModificationRequestSpec spec = 2;

  optional MemcachedModificationRequestStatus status = 3;
}

// MemcachedModificationRequestList is a list of MemcachedModificationRequests
message MemcachedModificationRequestList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of MemcachedModificationRequest CRD objects
  repeated MemcachedModificationRequest items = 2;
}

// MemcachedModificationRequestSpec is the spec for MemcachedModificationRequest
message MemcachedModificationRequestSpec {
  // Specifies the Memcached reference
  optional k8s.io.api.core.v1.LocalObjectReference databaseRef = 1;

  // Specifies the modification request type: Upgrade, HorizontalScaling, VerticalScaling etc.
  optional string type = 2;

  // Specifies the field information that needed to be upgraded
  optional UpgradeSpec upgrade = 3;
}

// MemcachedModificationRequestStatus is the status for MemcachedModificationRequest
message MemcachedModificationRequestStatus {
  optional string phase = 1;

  // observedGeneration is the most recent generation observed for this resource. It corresponds to the
  // resource's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 2;

  // Conditions applied to the request, such as approval or denial.
  // +optional
  repeated kmodules.xyz.client_go.api.v1.Condition conditions = 3;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=mongodbmodificationrequests,singular=mongodbmodificationrequest,shortName=mgmodreq,categories={datastore,kubedb,appscode}
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Type",type="string",JSONPath=".spec.type"
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
message MongoDBModificationRequest {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MongoDBModificationRequestSpec spec = 2;

  optional MongoDBModificationRequestStatus status = 3;
}

// MongoDBModificationRequestList is a list of MongoDBModificationRequests
message MongoDBModificationRequestList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of MongoDBModificationRequest CRD objects
  repeated MongoDBModificationRequest items = 2;
}

// MongoDBModificationRequestSpec is the spec for MongoDBModificationRequest
message MongoDBModificationRequestSpec {
  // Specifies the Elasticsearch reference
  optional k8s.io.api.core.v1.LocalObjectReference databaseRef = 1;

  // Specifies the modification request type: Upgrade, HorizontalScaling, VerticalScaling etc.
  optional string type = 2;

  // Specifies the field information that needed to be upgraded
  optional UpgradeSpec upgrade = 3;
}

// MongoDBModificationRequestStatus is the status for MongoDBModificationRequest
message MongoDBModificationRequestStatus {
  optional string phase = 1;

  // observedGeneration is the most recent generation observed for this resource. It corresponds to the
  // resource's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 2;

  // Conditions applied to the request, such as approval or denial.
  // +optional
  repeated kmodules.xyz.client_go.api.v1.Condition conditions = 3;
}

message MySQLHorizontalScalingSpec {
  // Number of nodes/members of the group
  optional int32 member = 1;

  // specifies the weight of the current member/Node
  optional int32 memberWeight = 2;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=mysqlmodificationrequests,singular=mysqlmodificationrequest,shortName=mymodreq,categories={datastore,kubedb,appscode}
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Type",type="string",JSONPath=".spec.type"
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
message MySQLModificationRequest {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MySQLModificationRequestSpec spec = 2;

  optional MySQLModificationRequestStatus status = 3;
}

// MySQLModificationRequestList is a list of MySQLModificationRequests
message MySQLModificationRequestList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of MySQLModificationRequest CRD objects
  repeated MySQLModificationRequest items = 2;
}

// MySQLModificationRequestSpec is the spec for MySQLModificationRequest
message MySQLModificationRequestSpec {
  // Specifies the database reference
  optional k8s.io.api.core.v1.LocalObjectReference databaseRef = 1;

  // Specifies the current ordinal of the StatefulSet
  optional int32 statefulSetOrdinal = 2;

  // Specifies the modification request type; ScaleUp, ScaleDown, Upgrade etc.
  optional string type = 3;

  // Specifies the field information that needed to be upgraded
  optional UpgradeSpec upgrade = 4;

  // HorizontalScaling specifies the horizontal scaling.
  optional MySQLHorizontalScalingSpec horizontalScaling = 5;

  // VerticalScaling specifies the vertical scaling.
  optional MySQLVerticalScalingSpec verticalScaling = 6;
}

// MySQLModificationRequestStatus is the status for MySQLModificationRequest
message MySQLModificationRequestStatus {
  optional string phase = 1;

  // observedGeneration is the most recent generation observed for this resource. It corresponds to the
  // resource's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 2;

  // Conditions applied to the request, such as approval or denial.
  // +optional
  repeated kmodules.xyz.client_go.api.v1.Condition conditions = 3;
}

message MySQLVerticalScalingSpec {
  // Containers represents the containers specification for scaling the requested resources.
  repeated ContainerResources containers = 1;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=perconaxtradbmodificationrequests,singular=perconaxtradbmodificationrequest,shortName=pxcmodreq,categories={datastore,kubedb,appscode}
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Type",type="string",JSONPath=".spec.type"
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
message PerconaXtraDBModificationRequest {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PerconaXtraDBModificationRequestSpec spec = 2;

  optional PerconaXtraDBModificationRequestStatus status = 3;
}

// PerconaXtraDBModificationRequestList is a list of PerconaXtraDBModificationRequests
message PerconaXtraDBModificationRequestList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of PerconaXtraDBModificationRequest CRD objects
  repeated PerconaXtraDBModificationRequest items = 2;
}

// PerconaXtraDBModificationRequestSpec is the spec for PerconaXtraDBModificationRequest
message PerconaXtraDBModificationRequestSpec {
  // Specifies the Elasticsearch reference
  optional k8s.io.api.core.v1.LocalObjectReference databaseRef = 1;

  // Specifies the modification request type: Upgrade, HorizontalScaling, VerticalScaling etc.
  optional string type = 2;

  // Specifies the field information that needed to be upgraded
  optional UpgradeSpec upgrade = 3;
}

// PerconaXtraDBModificationRequestStatus is the status for PerconaXtraDBModificationRequest
message PerconaXtraDBModificationRequestStatus {
  optional string phase = 1;

  // observedGeneration is the most recent generation observed for this resource. It corresponds to the
  // resource's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 2;

  // Conditions applied to the request, such as approval or denial.
  // +optional
  repeated kmodules.xyz.client_go.api.v1.Condition conditions = 3;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=pgbouncermodificationrequests,singular=pgbouncermodificationrequest,shortName=pbmodreq,categories={datastore,kubedb,appscode}
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Type",type="string",JSONPath=".spec.type"
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
message PgBouncerModificationRequest {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PgBouncerModificationRequestSpec spec = 2;

  optional PgBouncerModificationRequestStatus status = 3;
}

// PgBouncerModificationRequestList is a list of PgBouncerModificationRequests
message PgBouncerModificationRequestList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of PgBouncerModificationRequest CRD objects
  repeated PgBouncerModificationRequest items = 2;
}

// PgBouncerModificationRequestSpec is the spec for PgBouncerModificationRequest
message PgBouncerModificationRequestSpec {
  // Specifies the Elasticsearch reference
  optional k8s.io.api.core.v1.LocalObjectReference databaseRef = 1;

  // Specifies the modification request type: Upgrade, HorizontalScaling, VerticalScaling etc.
  optional string type = 2;

  // Specifies the field information that needed to be upgraded
  optional UpgradeSpec upgrade = 3;
}

// PgBouncerModificationRequestStatus is the status for PgBouncerModificationRequest
message PgBouncerModificationRequestStatus {
  optional string phase = 1;

  // observedGeneration is the most recent generation observed for this resource. It corresponds to the
  // resource's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 2;

  // Conditions applied to the request, such as approval or denial.
  // +optional
  repeated kmodules.xyz.client_go.api.v1.Condition conditions = 3;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=postgresmodificationrequests,singular=postgresmodificationrequest,shortName=pgmodreq,categories={datastore,kubedb,appscode}
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Type",type="string",JSONPath=".spec.type"
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
message PostgresModificationRequest {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PostgresModificationRequestSpec spec = 2;

  optional PostgresModificationRequestStatus status = 3;
}

// PostgresModificationRequestList is a list of PostgresModificationRequests
message PostgresModificationRequestList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of PostgresModificationRequest CRD objects
  repeated PostgresModificationRequest items = 2;
}

// PostgresModificationRequestSpec is the spec for PostgresModificationRequest
message PostgresModificationRequestSpec {
  // Specifies the Elasticsearch reference
  optional k8s.io.api.core.v1.LocalObjectReference databaseRef = 1;

  // Specifies the modification request type: Upgrade, HorizontalScaling, VerticalScaling etc.
  optional string type = 2;

  // Specifies the field information that needed to be upgraded
  optional UpgradeSpec upgrade = 3;
}

// PostgresModificationRequestStatus is the status for PostgresModificationRequest
message PostgresModificationRequestStatus {
  optional string phase = 1;

  // observedGeneration is the most recent generation observed for this resource. It corresponds to the
  // resource's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 2;

  // Conditions applied to the request, such as approval or denial.
  // +optional
  repeated kmodules.xyz.client_go.api.v1.Condition conditions = 3;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=proxysqlmodificationrequests,singular=proxysqlmodificationrequest,categories={datastore,kubedb,appscode}
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Type",type="string",JSONPath=".spec.type"
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
message ProxySQLModificationRequest {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ProxySQLModificationRequestSpec spec = 2;

  optional ProxySQLModificationRequestStatus status = 3;
}

// ProxySQLModificationRequestList is a list of ProxySQLModificationRequests
message ProxySQLModificationRequestList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ProxySQLModificationRequest CRD objects
  repeated ProxySQLModificationRequest items = 2;
}

// ProxySQLModificationRequestSpec is the spec for ProxySQLModificationRequest
message ProxySQLModificationRequestSpec {
  // Specifies the Elasticsearch reference
  optional k8s.io.api.core.v1.LocalObjectReference databaseRef = 1;

  // Specifies the modification request type: Upgrade, HorizontalScaling, VerticalScaling etc.
  optional string type = 2;

  // Specifies the field information that needed to be upgraded
  optional UpgradeSpec upgrade = 3;
}

// ProxySQLModificationRequestStatus is the status for ProxySQLModificationRequest
message ProxySQLModificationRequestStatus {
  optional string phase = 1;

  // observedGeneration is the most recent generation observed for this resource. It corresponds to the
  // resource's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 2;

  // Conditions applied to the request, such as approval or denial.
  // +optional
  repeated kmodules.xyz.client_go.api.v1.Condition conditions = 3;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=redismodificationrequests,singular=redismodificationrequest,shortName=rdmodreq,scope=Cluster,categories={datastore,kubedb,appscode}
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Type",type="string",JSONPath=".spec.type"
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
message RedisModificationRequest {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional RedisModificationRequestSpec spec = 2;

  optional RedisModificationRequestStatus status = 3;
}

// RedisModificationRequestList is a list of RedisModificationRequests
message RedisModificationRequestList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of RedisModificationRequest CRD objects
  repeated RedisModificationRequest items = 2;
}

// RedisModificationRequestSpec is the spec for RedisModificationRequest
message RedisModificationRequestSpec {
  // Specifies the Elasticsearch reference
  optional k8s.io.api.core.v1.LocalObjectReference databaseRef = 1;

  // Specifies the modification request type: Upgrade, HorizontalScaling, VerticalScaling etc.
  optional string type = 2;

  // Specifies the field information that needed to be upgraded
  optional UpgradeSpec upgrade = 3;
}

// RedisModificationRequestStatus is the status for RedisModificationRequest
message RedisModificationRequestStatus {
  optional string phase = 1;

  // observedGeneration is the most recent generation observed for this resource. It corresponds to the
  // resource's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 2;

  // Conditions applied to the request, such as approval or denial.
  // +optional
  repeated kmodules.xyz.client_go.api.v1.Condition conditions = 3;
}

message UpgradeSpec {
  // Specifies the target version name from catalog
  optional string targetVersion = 1;
}

