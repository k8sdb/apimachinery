/*
Copyright The KubeDB Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubedb.dev/apimachinery/apis/dba/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PostgresModificationRequestLister helps list PostgresModificationRequests.
type PostgresModificationRequestLister interface {
	// List lists all PostgresModificationRequests in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.PostgresModificationRequest, err error)
	// PostgresModificationRequests returns an object that can list and get PostgresModificationRequests.
	PostgresModificationRequests(namespace string) PostgresModificationRequestNamespaceLister
	PostgresModificationRequestListerExpansion
}

// postgresModificationRequestLister implements the PostgresModificationRequestLister interface.
type postgresModificationRequestLister struct {
	indexer cache.Indexer
}

// NewPostgresModificationRequestLister returns a new PostgresModificationRequestLister.
func NewPostgresModificationRequestLister(indexer cache.Indexer) PostgresModificationRequestLister {
	return &postgresModificationRequestLister{indexer: indexer}
}

// List lists all PostgresModificationRequests in the indexer.
func (s *postgresModificationRequestLister) List(selector labels.Selector) (ret []*v1alpha1.PostgresModificationRequest, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PostgresModificationRequest))
	})
	return ret, err
}

// PostgresModificationRequests returns an object that can list and get PostgresModificationRequests.
func (s *postgresModificationRequestLister) PostgresModificationRequests(namespace string) PostgresModificationRequestNamespaceLister {
	return postgresModificationRequestNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PostgresModificationRequestNamespaceLister helps list and get PostgresModificationRequests.
type PostgresModificationRequestNamespaceLister interface {
	// List lists all PostgresModificationRequests in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.PostgresModificationRequest, err error)
	// Get retrieves the PostgresModificationRequest from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.PostgresModificationRequest, error)
	PostgresModificationRequestNamespaceListerExpansion
}

// postgresModificationRequestNamespaceLister implements the PostgresModificationRequestNamespaceLister
// interface.
type postgresModificationRequestNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PostgresModificationRequests in the indexer for a given namespace.
func (s postgresModificationRequestNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.PostgresModificationRequest, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PostgresModificationRequest))
	})
	return ret, err
}

// Get retrieves the PostgresModificationRequest from the indexer for a given namespace and name.
func (s postgresModificationRequestNamespaceLister) Get(name string) (*v1alpha1.PostgresModificationRequest, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("postgresmodificationrequest"), name)
	}
	return obj.(*v1alpha1.PostgresModificationRequest), nil
}
