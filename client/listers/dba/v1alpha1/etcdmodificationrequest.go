/*
Copyright The KubeDB Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubedb.dev/apimachinery/apis/dba/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// EtcdModificationRequestLister helps list EtcdModificationRequests.
type EtcdModificationRequestLister interface {
	// List lists all EtcdModificationRequests in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.EtcdModificationRequest, err error)
	// EtcdModificationRequests returns an object that can list and get EtcdModificationRequests.
	EtcdModificationRequests(namespace string) EtcdModificationRequestNamespaceLister
	EtcdModificationRequestListerExpansion
}

// etcdModificationRequestLister implements the EtcdModificationRequestLister interface.
type etcdModificationRequestLister struct {
	indexer cache.Indexer
}

// NewEtcdModificationRequestLister returns a new EtcdModificationRequestLister.
func NewEtcdModificationRequestLister(indexer cache.Indexer) EtcdModificationRequestLister {
	return &etcdModificationRequestLister{indexer: indexer}
}

// List lists all EtcdModificationRequests in the indexer.
func (s *etcdModificationRequestLister) List(selector labels.Selector) (ret []*v1alpha1.EtcdModificationRequest, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.EtcdModificationRequest))
	})
	return ret, err
}

// EtcdModificationRequests returns an object that can list and get EtcdModificationRequests.
func (s *etcdModificationRequestLister) EtcdModificationRequests(namespace string) EtcdModificationRequestNamespaceLister {
	return etcdModificationRequestNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// EtcdModificationRequestNamespaceLister helps list and get EtcdModificationRequests.
type EtcdModificationRequestNamespaceLister interface {
	// List lists all EtcdModificationRequests in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.EtcdModificationRequest, err error)
	// Get retrieves the EtcdModificationRequest from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.EtcdModificationRequest, error)
	EtcdModificationRequestNamespaceListerExpansion
}

// etcdModificationRequestNamespaceLister implements the EtcdModificationRequestNamespaceLister
// interface.
type etcdModificationRequestNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all EtcdModificationRequests in the indexer for a given namespace.
func (s etcdModificationRequestNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.EtcdModificationRequest, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.EtcdModificationRequest))
	})
	return ret, err
}

// Get retrieves the EtcdModificationRequest from the indexer for a given namespace and name.
func (s etcdModificationRequestNamespaceLister) Get(name string) (*v1alpha1.EtcdModificationRequest, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("etcdmodificationrequest"), name)
	}
	return obj.(*v1alpha1.EtcdModificationRequest), nil
}
